/*
 * POS Registry API - swagger UI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServicesForAcquirersApi
 */
@Disabled
public class ServicesForAcquirersApiTest {

    private final ServicesForAcquirersApi api = new ServicesForAcquirersApi();

    /**
     * Fetch errors for specific upload
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchErrorsTest() throws ApiException {
        String tokenUsername = null;
        String tokenPassword = null;
        Long transId = null;
        api.fetchErrors(tokenUsername, tokenPassword, transId);
        // TODO: test validations
    }

    /**
     * Fetch submitted contracts for specific TIN
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchRegistryAfmTest() throws ApiException {
        String tokenUsername = null;
        String tokenPassword = null;
        String tin = null;
        String mid = null;
        String tid = null;
        String iban = null;
        api.fetchRegistryAfm(tokenUsername, tokenPassword, tin, mid, tid, iban);
        // TODO: test validations
    }

    /**
     * Fetch info for specific upload
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchUploadTest() throws ApiException {
        String tokenUsername = null;
        String tokenPassword = null;
        Long transId = null;
        api.fetchUpload(tokenUsername, tokenPassword, transId);
        // TODO: test validations
    }

    /**
     * Fetch uploaded file
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchUploadedCsvTest() throws ApiException {
        String tokenUsername = null;
        String tokenPassword = null;
        Long transId = null;
        api.fetchUploadedCsv(tokenUsername, tokenPassword, transId);
        // TODO: test validations
    }

    /**
     * Fetch list of uploaded files
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchUploadsTest() throws ApiException {
        String tokenUsername = null;
        String tokenPassword = null;
        String dateFrom = null;
        String dateTo = null;
        String uploadType = null;
        api.fetchUploads(tokenUsername, tokenPassword, dateFrom, dateTo, uploadType);
        // TODO: test validations
    }

    /**
     * Upload CSV file 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadCsvTest() throws ApiException {
        String tokenUsername = null;
        String tokenPassword = null;
        File _file = null;
        api.uploadCsv(tokenUsername, tokenPassword, _file);
        // TODO: test validations
    }

    /**
     * Validate CSV file 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validateCsvTest() throws ApiException {
        String tokenUsername = null;
        String tokenPassword = null;
        File _file = null;
        api.validateCsv(tokenUsername, tokenPassword, _file);
        // TODO: test validations
    }

}
